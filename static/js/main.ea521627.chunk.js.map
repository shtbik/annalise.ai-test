{"version":3,"sources":["styles/globalStyles.ts","styles/theme.ts","store/name-context.ts","atoms/Input/styled.index.js","atoms/Input/index.tsx","atoms/Button/styled.index.js","atoms/Button/index.tsx","pages/Welcome/styled.index.ts","pages/Welcome/index.tsx","utils/images-api.ts","pages/Images/Header/index.tsx","pages/Images/Pagination/styled.index.ts","pages/Images/Pagination/index.tsx","molecules/MansoryGrid/styled.index.ts","molecules/MansoryGrid/index.tsx","molecules/ImageCard/styled.index.ts","molecules/ImageCard/index.tsx","pages/Images/ImagesList/styled.index.ts","pages/Images/ImagesList/index.tsx","pages/Images/SearchForm/styled.index.js","pages/Images/SearchForm/index.tsx","pages/Images/styled.index.ts","pages/Images/index.tsx","templates/ImagesSearch/styled.index.js","templates/ImagesSearch/index.tsx","index.tsx"],"names":["createGlobalStyle","theme","breakpoints","xs","sm","md","lg","xl","responsive","up","breakpoint","NameContext","createContext","DispatchNameContext","StyledInput","styled","input","Input","props","StyledButton","button","Button","children","rest","fieldName","Welcome","push","useHistory","dispatchName","useContext","handleSubmit","useCallback","event","preventDefault","value","FormData","currentTarget","get","onSubmit","name","required","placeholder","unsplashApi","createApi","apiUrl","process","Header","StyledWrapper","div","StyledNextButton","Pagination","onPrev","onNext","loading","onClick","disabled","StyleGrid","$columnCount","$columnGap","MansoryGrid","columnCount","columnGap","className","StyledImg","img","ImageCard","url","alt","src","StyledMansoryGrid","Math","floor","StyledImageCard","ImagesList","data","error","length","map","id","alt_description","small","urls","StyledResetButton","SearchForm","onReset","type","StyledSearchForm","initialState","meta","page","MemoizedHeader","memo","MemoizedStyledSearchForm","Images","useState","imagesRes","setImages","setLoading","handleLoadRandom","a","photos","getRandom","count","response","errors","console","useEffect","formData","query","search","getPhotos","perPage","results","total","total_pages","handleLoad","offset","nextQuery","nextPage","handleLoadPrev","handleLoadNext","undefined","ImagesSearch","setName","Provider","exact","path","component","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea521627.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`\n","const breakpoints = {\n  xs: 320,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n}\n\ntype TBreakpoint = keyof typeof breakpoints\n\nconst responsive = {\n  up: (breakpoint: TBreakpoint) => `@media (min-width: ${theme.breakpoints[breakpoint]}px)`,\n}\n\nconst theme = {\n  breakpoints,\n  responsive,\n}\n\nexport default theme\n","import { createContext, Dispatch, SetStateAction } from 'react'\n\nexport type TNameValue = string\n\nexport const NameContext = createContext<TNameValue>('')\nexport const DispatchNameContext = createContext((() => {}) as Dispatch<SetStateAction<TNameValue>>)\n","import styled from 'styled-components'\n\nexport const StyledInput = styled.input`\n  padding: 5px;\n`\n","import { FC, InputHTMLAttributes } from 'react'\nimport { StyledComponent } from '../../types/component'\n\nimport { StyledInput } from './styled.index'\n\ninterface IInput extends StyledComponent {}\n\nconst Input: FC<IInput & InputHTMLAttributes<HTMLInputElement>> = ({ ...props }) => {\n  return <StyledInput {...props} />\n}\n\nexport default Input\n","import styled from 'styled-components'\n\nexport const StyledButton = styled.button`\n  padding: 5px;\n`\n","import { FC, ButtonHTMLAttributes } from 'react'\nimport { StyledComponent } from '../../types/component'\n\nimport { StyledButton } from './styled.index'\n\ninterface IButton extends StyledComponent {}\n\nconst Button: FC<IButton & ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, ...rest }) => {\n  return <StyledButton {...rest}>{children}</StyledButton>\n}\n\nexport default Button\n","import styled from 'styled-components'\n\nimport Button from '../../atoms/Button'\n\nexport const StyledButton = styled(Button)`\n  margin-left: 10px;\n`\n","import { FC, useCallback, FormEvent, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { DispatchNameContext } from '../../store/name-context'\nimport Input from '../../atoms/Input'\n\nimport { StyledButton } from './styled.index'\n\nexport const fieldName = 'name'\n\nconst Welcome: FC = () => {\n  const { push } = useHistory()\n  const dispatchName = useContext(DispatchNameContext)\n\n  const handleSubmit = useCallback((event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const formData = new FormData(event.currentTarget)\n    const value = formData.get(fieldName) as string\n    dispatchName(value)\n    push('/images')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <Input name={fieldName} required placeholder={`Type your ${fieldName}...`} />\n        </label>\n\n        <StyledButton>Let's go</StyledButton>\n      </form>\n    </div>\n  )\n}\n\nexport default Welcome\n","import { createApi } from 'unsplash-js'\n\nconst { REACT_APP_UNSPLASH_API_URL } = process.env\n\nconst origin = REACT_APP_UNSPLASH_API_URL || `http://${window.location.hostname}:8080`\n\nconst unsplashApi = createApi({\n  apiUrl: `${origin}/unsplash-proxy`,\n})\n\nexport default unsplashApi\n","import { useContext } from 'react'\n\nimport { NameContext } from '../../../store/name-context'\n\nconst Header = () => {\n  const name = useContext(NameContext)\n\n  return <h3>Hello, {name}</h3>\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nimport Button from '../../../atoms/Button'\n\nexport const StyledWrapper = styled.div`\n  &[aria-disabled='true'] {\n    cursor: not-allowed;\n  }\n\n  &[aria-disabled='true']:active {\n    pointer-events: none;\n  }\n`\n\nexport const StyledNextButton = styled(Button)`\n  margin-left: 10px;\n`\n","import { FC } from 'react'\n\nimport Button from '../../../atoms/Button'\n\nimport { StyledWrapper, StyledNextButton } from './styled.index'\n\ninterface IPagination {\n  onPrev?: () => void\n  onNext?: () => void\n  loading?: boolean\n}\n\nexport const Pagination: FC<IPagination> = ({ onPrev, onNext, loading = false }) => {\n  return (\n    <StyledWrapper aria-disabled={loading}>\n      <Button onClick={onPrev} disabled={!onPrev}>\n        Prev Page\n      </Button>\n      <StyledNextButton onClick={onNext} disabled={!onNext}>\n        Next Page\n      </StyledNextButton>\n    </StyledWrapper>\n  )\n}\n\nexport default Pagination\n","import styled from 'styled-components'\n\ninterface IStyleGrid {\n  $columnCount: number\n  $columnGap: number\n}\n\nexport const StyleGrid = styled.div<IStyleGrid>`\n  column-count: ${({ $columnCount }) => $columnCount};\n  column-gap: ${({ $columnGap }) => `${$columnGap}px`};\n\n  > * {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    overflow: hidden;\n    break-inside: avoid;\n  }\n`\n","import { FC } from 'react'\n\nimport { StyledComponent } from '../../types/component'\n\nimport { StyleGrid } from './styled.index'\n\nexport interface IMansoryGrid extends StyledComponent {\n  columnCount: number\n  columnGap?: number\n}\n\nexport const defaultColumnGap = 10\n\nconst MansoryGrid: FC<IMansoryGrid> = ({ children, columnCount, columnGap = defaultColumnGap, className }) => {\n  return (\n    <StyleGrid $columnCount={columnCount} $columnGap={columnGap} className={className}>\n      {children}\n    </StyleGrid>\n  )\n}\n\nexport default MansoryGrid\n","import styled from 'styled-components'\n\nexport const StyledImg = styled.img`\n  max-width: 100%;\n`\n","import { FC } from 'react'\n\nimport { StyledComponent } from '../../types/component'\n\nimport { StyledImg } from './styled.index'\n\ninterface IImageCard extends StyledComponent {\n  url: string\n  alt: string\n}\n\nconst ImageCard: FC<IImageCard> = ({ url, alt, className }) => {\n  return (\n    <div className={className}>\n      <StyledImg src={url} alt={alt} />\n    </div>\n  )\n}\n\nexport default ImageCard\n","import styled from 'styled-components'\n\nimport MansoryGrid, { IMansoryGrid } from '../../../molecules/MansoryGrid'\n\nimport ImageCard from '../../../molecules/ImageCard'\n\nexport const columnGap = 10\n\nexport const StyledMansoryGrid = styled(MansoryGrid)<IMansoryGrid>`\n  column-count: 1;\n\n  ${({ columnCount, theme: { responsive } }) => `\n    ${responsive.up('sm')} {\n      column-count: ${Math.floor(columnCount / 2)};\n    }\n    ${responsive.up('md')} {\n      column-count: ${columnCount};\n    }\n  `};\n`\n\nexport const StyledImageCard = styled(ImageCard)`\n  display: flex;\n  justify-content: center;\n  margin-bottom: ${columnGap}px;\n`\n","import { FC } from 'react'\n\nimport { StyledComponent } from '../../../types/component'\nimport { TImageResponseGenerated } from '../types.generated'\n\nimport { StyledMansoryGrid, StyledImageCard, columnGap } from './styled.index'\n\ninterface IImagesList extends StyledComponent {\n  loading: boolean\n  data: TImageResponseGenerated\n  error: boolean\n}\n\nconst columnCount = 4\n\nexport const loadingMsg = 'Loading...'\nexport const errorMsg = 'Error'\nexport const emptyMsg = 'There is no data'\n\nconst ImagesList: FC<IImagesList> = ({ data, loading, error, className = '' }) => {\n  if (loading) return <div>{loadingMsg}</div>\n  if (error) return <div>{errorMsg}</div>\n  if (!data.length) return <div>{emptyMsg}</div>\n\n  return (\n    <StyledMansoryGrid columnCount={columnCount} columnGap={columnGap} className={className}>\n      {data.map(({ id, alt_description, urls: { small } }) => (\n        <StyledImageCard key={id} url={small} alt={alt_description} />\n      ))}\n    </StyledMansoryGrid>\n  )\n}\n\nexport default ImagesList\n","import styled from 'styled-components'\n\nimport Input from '../../../atoms/Input'\nimport Button from '../../../atoms/Button'\n\nexport const StyledInput = styled(Input)`\n  margin-right: 10px;\n`\n\nexport const StyledResetButton = styled(Button)`\n  margin-left: 10px;\n`\n","import { FC, FormEvent } from 'react'\n\nimport Button from '../../../atoms/Button'\nimport { StyledComponent } from '../../../types/component'\n\nimport { StyledInput, StyledResetButton } from './styled.index'\n\nexport interface ISearchForm extends StyledComponent {\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void\n  onReset: (event: FormEvent<HTMLFormElement>) => void\n  name: string\n}\n\nconst SearchForm: FC<ISearchForm> = ({ name, onSubmit, onReset, className = '' }) => {\n  return (\n    <form onSubmit={onSubmit} onReset={onReset} className={className}>\n      <StyledInput name={name} required placeholder=\"Type your query...\" />\n\n      <Button type=\"submit\">Search</Button>\n      <StyledResetButton type=\"reset\">Random!</StyledResetButton>\n    </form>\n  )\n}\n\nexport default SearchForm\n","import styled from 'styled-components'\n\nimport SearchForm from './SearchForm'\n\nexport const StyledSearchForm = styled(SearchForm)`\n  margin-bottom: 20px;\n`\n","import { FC, useState, useCallback, memo, useEffect } from 'react'\n\nimport unsplashApi from '../../utils/images-api'\nimport { TImageResponseGenerated } from './types.generated'\n\nimport Header from './Header'\nimport { ISearchForm } from './SearchForm'\nimport Pagination from './Pagination'\nimport ImagesList from './ImagesList'\n\nimport { StyledSearchForm } from './styled.index'\n\ntype TImagesResponseState = {\n  data: TImageResponseGenerated\n  meta: {\n    page: number\n    total?: number\n    total_pages?: number\n    query?: string\n  }\n  error: boolean\n}\n\nconst initialState = { data: [], error: false, meta: { page: 1 } }\nconst PER_PAGE = 10\nconst fieldName = 'query'\n\nconst MemoizedHeader = memo(Header)\nconst MemoizedStyledSearchForm = memo(StyledSearchForm)\n\nconst Images: FC = () => {\n  const [imagesRes, setImages] = useState<TImagesResponseState>(initialState)\n  const [loading, setLoading] = useState(true)\n  const { data, error, meta } = imagesRes\n\n  const handleLoadRandom = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { response, errors } = await unsplashApi.photos.getRandom({ count: PER_PAGE })\n      if (errors?.length) {\n        throw errors\n      }\n      setImages({ ...initialState, data: response as TImageResponseGenerated })\n    } catch (error) {\n      console.error(error)\n      setImages({ ...initialState, error: true })\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    handleLoadRandom()\n  }, [handleLoadRandom])\n\n  const handleSubmit: ISearchForm['onSubmit'] = useCallback(async event => {\n    event.preventDefault()\n    const formData = new FormData(event.currentTarget)\n    const query = formData.get(fieldName) as string\n\n    setLoading(true)\n    try {\n      const { response } = await unsplashApi.search.getPhotos(\n        {\n          query,\n          page: 1,\n          perPage: PER_PAGE,\n        },\n        {}\n      )\n      setImages({\n        error: false,\n        data: response?.results as TImageResponseGenerated,\n        meta: { total: response?.total, total_pages: response?.total_pages, page: 1, query },\n      })\n    } catch (error) {\n      setImages({ ...initialState, error: true })\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const handleLoad = useCallback(\n    async (offset: number) => {\n      setLoading(true)\n      try {\n        const nextQuery = meta.query as string\n        const nextPage = meta.page + offset\n        const { response } = await unsplashApi.search.getPhotos(\n          {\n            query: nextQuery,\n            page: nextPage,\n            perPage: PER_PAGE,\n          },\n          {}\n        )\n        setImages({\n          error: false,\n          data: response?.results as TImageResponseGenerated,\n          meta: { total: response?.total, total_pages: response?.total_pages, page: nextPage, query: nextQuery },\n        })\n      } catch (error) {\n        setImages({ ...initialState, error: true })\n        console.error(error)\n      } finally {\n        setLoading(false)\n      }\n    },\n    [meta.query, meta.page]\n  )\n\n  const handleLoadPrev = useCallback(() => {\n    handleLoad(-1)\n  }, [handleLoad])\n\n  const handleLoadNext = useCallback(() => {\n    handleLoad(1)\n  }, [handleLoad])\n\n  return (\n    <div>\n      <MemoizedHeader />\n      <MemoizedStyledSearchForm name={fieldName} onSubmit={handleSubmit} onReset={handleLoadRandom} />\n\n      {meta.query && meta.total ? (\n        <Pagination\n          loading={loading}\n          onPrev={meta.page > 1 ? handleLoadPrev : undefined}\n          onNext={meta.page < (meta.total_pages || 0) ? handleLoadNext : undefined}\n        />\n      ) : null}\n      <p>{meta.total ? `Total: ${meta.total}. Pages: ${meta.page} / ${meta.total_pages}` : ''}</p>\n\n      <ImagesList loading={loading} data={data} error={error} />\n    </div>\n  )\n}\n\nexport default Images\n","import styled from 'styled-components'\n\nexport const StyledWrapper = styled.div`\n  padding: 20px;\n\n  ${({ theme: { responsive } }) => `${responsive.up('md')} {\n    padding: 40px;\n  }`}\n`\n","import { FC, useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Main from '../../pages/Welcome'\nimport Images from '../../pages/Images'\n\nimport { TNameValue, DispatchNameContext, NameContext } from '../../store/name-context'\n\nimport { StyledWrapper } from './styled.index'\n\nconst ImagesSearch: FC = () => {\n  const [name, setName] = useState<TNameValue>('')\n\n  return (\n    <DispatchNameContext.Provider value={setName}>\n      <NameContext.Provider value={name}>\n        <StyledWrapper>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            {name && <Route exact path=\"/images\" component={Images} />}\n\n            <Route path=\"*\" component={Main} />\n          </Switch>\n        </StyledWrapper>\n      </NameContext.Provider>\n    </DispatchNameContext.Provider>\n  )\n}\n\nexport default ImagesSearch\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport GlobalStyles from './styles/globalStyles'\nimport theme from './styles/theme'\n\nimport ImagesSearch from './templates/ImagesSearch'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider theme={theme}>\n        <ImagesSearch />\n      </ThemeProvider>\n    </Router>\n    <GlobalStyles />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}